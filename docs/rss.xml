<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Starsalt's Blog</title><link>https://starsalt0124.github.io</link><description>stay hungry, stay foolish</description><copyright>Starsalt's Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/125791539?s=400&amp;u=8ee725c02224f8d28f9711eb4a9a25ebc460d7e6&amp;v=4</url><title>avatar</title><link>https://starsalt0124.github.io</link></image><lastBuildDate>Fri, 25 Oct 2024 13:03:50 +0000</lastBuildDate><managingEditor>Starsalt's Blog</managingEditor><ttl>60</ttl><webMaster>Starsalt's Blog</webMaster><item><title>App静态分析实验</title><link>https://starsalt0124.github.io/post/App-jing-tai-fen-xi-shi-yan.html</link><description># App静态分析实验&#13;
&#13;
## 创建具有soot依赖的项目&#13;
创建新项目，选择Maven作为构建系统&#13;
![image](https://github.com/user-attachments/assets/ffe977b5-c441-4bca-98f5-bdc4012a5c49)&#13;
在`pom.xml`文件中添加：&#13;
```java&#13;
&lt;dependencies&gt;&#13;
  &lt;dependency&gt;&#13;
    &lt;groupId&gt;ca.mcgill.sable&lt;/groupId&gt;&#13;
    &lt;artifactId&gt;soot&lt;/artifactId&gt;&#13;
    &lt;version&gt;4.1.0&lt;/version&gt;&#13;
  &lt;/dependency&gt;&#13;
&lt;/dependencies&gt;&#13;
``` &#13;
编辑`pom.xml`，并重新加载项目&#13;
![image](https://github.com/user-attachments/assets/15bae121-d2f6-4465-94d2-48c790d1963b)&#13;
&#13;
## 案例一：分析java字节码文件&#13;
按照指导手册提示编写代码，通过soot解析类的继承关系，并打印出class文件的jimple表示&#13;
![image](https://github.com/user-attachments/assets/e7669ace-0df2-44bc-8ab1-b3124a70a74c)&#13;
![image](https://github.com/user-attachments/assets/7815ca4f-3d7c-4dfe-84e0-11789fb37f38)&#13;
编写测试代码&#13;
&#13;
&gt; [!CAUTION]&#13;
&gt; 编译时使用的javac版本应该与soot项目保持一致&#13;
&#13;
![image](https://github.com/user-attachments/assets/6bf2009b-5a0c-47ac-81f7-6b4ce23c1fef)&#13;
&#13;
运行soot项目，可以看到成功输出了测试程序的信息&#13;
![image](https://github.com/user-attachments/assets/0ba78138-cc6c-41f8-bcdf-a75eebb0e0a6)&#13;
&#13;
## 案例二：Soot分析apk文件&#13;
下载安卓SDK&#13;
```shell&#13;
git clone https://github.com/Sable/android-platforms.git&#13;
``` &#13;
按照指导手册提示编写代码，通过soot解包安卓apk文件，遍历各个类中的方法，打印具体方法的jimple表示&#13;
![image](https://github.com/user-attachments/assets/d8237fcd-1fe7-4291-840c-81a1ddce9c8c)&#13;
![image](https://github.com/user-attachments/assets/0f1d0229-196a-4c9b-a79c-d047f48f1b96)&#13;
运行代码，可以看到具体方法的jimple表示&#13;
![image](https://github.com/user-attachments/assets/64bae112-061f-4263-823a-40a641360f95)&#13;
查看output文件夹，可以看到类的jimple表示&#13;
![image](https://github.com/user-attachments/assets/fe03a840-bdf7-4ba3-8bb8-e469932768eb)&#13;
。</description><guid isPermaLink="true">https://starsalt0124.github.io/post/App-jing-tai-fen-xi-shi-yan.html</guid><pubDate>Thu, 24 Oct 2024 13:49:16 +0000</pubDate></item><item><title>App动态测试实验</title><link>https://starsalt0124.github.io/post/App-dong-tai-ce-shi-shi-yan.html</link><description># App动态测试实验&#13;
&#13;
## 准备工作&#13;
&#13;
- python: [anaconda](https://blog.csdn.net/tqlisno1/article/details/108908775) &#13;
- java: [JDK](https://www.oracle.com/java/technologies/downloads/#jdk23-windows)&#13;
&gt; [!TIP]&#13;
&gt; 最新版的JDK安装程序会自动配置环境变量&#13;
- Android SDK: [Android Studio](https://developer.android.google.cn/studio?hl=zh-cn)&#13;
&gt; [!NOTE]&#13;
&gt; Android Studio在进行安装时需要连接外网&#13;
&#13;
在安装完成后将platform-tools路径添加到系统环境变量&#13;
![image](https://github.com/user-attachments/assets/a28e9e1b-630b-4219-83a2-27efaa5c8bf4)&#13;
在命令行中输入adb进行测试&#13;
![Snipaste_2024-10-24_16-56-00](https://github.com/user-attachments/assets/1f4634dc-c47f-4a4d-9886-46625d8e59f0)&#13;
- 模拟器: [genymotion](https://www.genymotion.com/product-desktop/download/)&#13;
选择VirtualBox和genymotion&#13;
![image](https://github.com/user-attachments/assets/51f3d735-fa72-4788-bf58-61c80d5a5842)&#13;
配置虚拟机&#13;
![image](https://github.com/user-attachments/assets/b1037360-ae7a-4dbc-b696-0713b91724f6)&#13;
![image](https://github.com/user-attachments/assets/b1d7f7b0-116a-44fd-b15b-a249154e318a)&#13;
启动虚拟机后，可以在adb中看到该虚拟机&#13;
![image](https://github.com/user-attachments/assets/737224ea-2fb5-4a3e-8f92-0cbdacd8adb5)&#13;
- 测试工具: [droidbot](https://github.com/honeynet/droidbot)&#13;
克隆仓库`git clone https://github.com/honeynet/droidbot.git`&#13;
打开`setup.py`，将`androguard&gt;=3.4.0a1`修改为`androguard==3.4.0a1`&#13;
在项目文件夹打开终端，输入`pip install -e .`安装droidbot&#13;
![image](https://github.com/user-attachments/assets/95fe5dde-48a8-4d49-8404-22937396ae44)&#13;
安装完成后，输入`droidbot -h`&#13;
![image](https://github.com/user-attachments/assets/3fdaaa85-7d08-46d9-9b07-f6246daf321f)&#13;
&#13;
## 开始测试&#13;
输入指令`droidbot -a &lt;path_to_apk&gt; -o output_dir`开始测试&#13;
![image](https://github.com/user-attachments/assets/bcfdea3e-35e4-4f31-99fb-4132bcdc5033)&#13;
在测试一段时间后，打开输出文件夹中的报告&#13;
![image](https://github.com/user-attachments/assets/98031987-ba71-4914-9c31-92e624e03916)&#13;
点击节点或边可以看到相应的信息&#13;
![image](https://github.com/user-attachments/assets/576ebd39-69d4-4a5f-9d14-bf88d49ec34f)&#13;
&#13;
。</description><guid isPermaLink="true">https://starsalt0124.github.io/post/App-dong-tai-ce-shi-shi-yan.html</guid><pubDate>Thu, 24 Oct 2024 09:12:33 +0000</pubDate></item></channel></rss>